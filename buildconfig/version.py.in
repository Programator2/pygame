##    pygame - Python Game Library
##    Copyright (C) 2000-2003  Pete Shinners
##
##    This library is free software; you can redistribute it and/or
##    modify it under the terms of the GNU Library General Public
##    License as published by the Free Software Foundation; either
##    version 2 of the License, or (at your option) any later version.
##
##    This library is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
##    Library General Public License for more details.
##
##    You should have received a copy of the GNU Library General Public
##    License along with this library; if not, write to the Free
##    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
##    Pete Shinners
##    pete@shinners.org

"""Simply the current installed pygame version. The version information is
stored in the regular pygame module as 'pygame.ver'. Keeping the version
information also available in a separate module allows you to test the
pygame version without importing the main pygame module.

The python version information should always compare greater than any previous
releases. (hmm, until we get to versions > 10)
"""

class VersionInfo(object):
    def __init__(self, major, minor, patch):
        self._version = (major, minor, patch)

    @property
    def major(self):
        return self[0]

    @property
    def minor(self):
        return self[1]

    @property
    def patch(self):
        return self[2]

    def __repr__(self):
        return "pygame.version.vernum(major={}, minor={}, patch={})" \
            .format(*self._version)

    def __str__(self):
        return "{}.{}.{}".format(*self._version)

    def __getitem__(self, key):
        return self._version[key]

    def __len__(self):
        return len(self._version)

    def __lt__(self, other):
        return self._version < other

    def __le__(self, other):
        return self._version <= other

    def __eq__(self, other):
        return self._version == other

    def __gt__(self, other):
        return self._version > other

    def __ge__(self, other):
        return self._version >= other
